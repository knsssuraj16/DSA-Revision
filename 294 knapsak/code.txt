#include<bits/stdc++.h>
using namespace std;

int solve(vector<int> &wi,vector<int> &vi, int w, int n,  vector<vector<int>> &dp ){
    if(w == 0){
        return 0;
    }
    if(n == 0 ){
        return 0;
    }
    if(dp[n][w] != -1){
        return dp[n][w];
    }
    
    
    
    if(wi[n-1] <= w){
        int inc= vi[n-1] + solve(wi,vi,w-wi[n-1],n-1,dp);
        int ex = solve(wi,vi,w,n-1,dp);
        
        dp[n][w] = max(inc,ex);
        return max(inc,ex);
    }
    
     dp[n][w] = solve(wi,vi,w,n-1,dp);
    return  dp[n][w];
    
}
int main(){
    
    // write your code here
    
    int n;
    cin >> n;
    vector<int> wi(n);
    vector<int> vi(n);
    
    int w;
    for(int i =0; i<n ; i++){
        cin >> wi[i];
    }
    for(int i =0; i<n ; i++){
        cin >> vi[i];
    }
    
    cin >> w;
    
    vector<vector<int>> dp(n+1,vector<int> (w+1,-1));
    
    cout<< solve(wi,vi,w,n, dp)<< endl;
    return 0;
}