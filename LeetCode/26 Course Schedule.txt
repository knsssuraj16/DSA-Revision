class Solution {
public:
    bool dfs(  vector<vector<int>> & vec,     vector<int> &vis,     vector<int>& revis,int i){
        
        vis[i]= 1;
        revis[i]=1;
        
        for(auto a : vec[i]){
            if(!vis[a]){
               if(dfs(vec,vis,revis,a)) return true;
            }else if( revis[a]){
                return true;
            }
        }
        revis[i]=0;
        return false;
        
    }
    bool canFinish(int numCourses, vector<vector<int>>& pr) {
        
        
        
           vector<vector<int>> vec(numCourses);
            vector<int> vis(numCourses,0);
            vector<int> reVis(numCourses,0);
            
                    for(int i =0 ;i < pr.size(); i++){
                        vec[pr[i][0]].push_back(pr[i][1]);
                    }
        

        
            for(int i = 0; i< numCourses; i++){
                  if(!vis[i]){
                     if(dfs(vec,vis,reVis,i)) return false;
                  }
            }
        
        return true;
        
    }
    
};