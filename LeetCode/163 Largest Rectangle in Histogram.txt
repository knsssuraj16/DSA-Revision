class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        vector<int>ngr(n);
        vector<int> ngl(n);
        
        stack<int> st;
        ngl[0] = -1;
        st.push(0);
        for(int i=1; i < n; i++){
            
             while(!st.empty() && heights[st.top()] >= heights[i]){
                    st.pop();
                }
            if(st.size() == 0){
                ngl[i] = -1;
            }else{
                ngl[i] = st.top();
            }
                st.push(i);      
        }
        
        while(!st.empty()){
            st.pop();
        }
        ngr[n-1] = n;
        st.push(n-1);
        
        for(int i=n-2; i >= 0 ; i--){
            
             while(!st.empty() && heights[st.top()] >= heights[i]){
                    st.pop();
                }
            if(st.size() == 0){
                ngr[i] = n;
            }else{
                ngr[i] = st.top();
            }
                st.push(i);      
        }
        
        int mx =0;
        for(int i=0;i<n; i++){
            mx = max(mx,((ngr[i] - ngl[i]- 1) * heights[i]));
        }
        
        return mx;
    }
};