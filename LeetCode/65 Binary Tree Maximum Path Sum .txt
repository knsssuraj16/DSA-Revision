/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int helper(TreeNode* root ,int &overallMax){
        if(root == NULL){
            return 0;
        }
        
        int leftMax = helper(root->left,overallMax) ;
        
        int right  = helper(root->right,overallMax);
        
        leftMax = leftMax<0 ?0 :leftMax;
        right = right<0 ?0 :right;
        
        
        // cout<< overallMax <<" "<<res<<" root" <<root->val << endl;
        
        int res = leftMax +  right + root->val;
        
        overallMax = max(overallMax,res);
        
        return (root->val + max(right,leftMax));
        
    }
    
    int maxPathSum(TreeNode* root) {
        int overallMax= INT_MIN;
        
       int res =  helper(root,overallMax);
        
        return overallMax;
    }
};