/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(vector<int> &arr1,TreeNode* root){
        if(root==NULL){
            
            return;
        }
        inorder(arr1,root->left);
        arr1.push_back(root->val);
        inorder(arr1,root->right);
        
        
    }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        
        
        vector<int> arr1,arr2;
        inorder(arr1,root1);
        inorder(arr2,root2);
        vector<int> ans;
        int i =0, j =0;
        while(i<arr1.size() && j <arr2.size()){
            if(arr1[i] < arr2[j]){
                ans.push_back(arr1[i++]);
            }else{
                ans.push_back(arr2[j++]);
            }
        }
        
          while(i<arr1.size() ){
                ans.push_back(arr1[i++]);         
        }
        
          while(j<arr2.size() ){
                ans.push_back(arr2[j++]);         
        }
        return ans;
    }
};