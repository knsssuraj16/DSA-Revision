/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode *slow=head,*fast=head;
        
        if(head == NULL|| head->next == NULL){
            return NULL;
        }
        
        while(fast->next != NULL && fast->next->next != NULL){
            fast = fast->next->next;
            slow = slow->next;
            
            if(fast == slow){
                break;
            }
        }
        
          
         if(fast->next == NULL|| fast->next->next == NULL){
            return NULL;
        }
        
        
        ListNode *dummy = head;
        
        while(slow != dummy){
            slow= slow->next;
            dummy =dummy ->next;
        }
      
        return dummy;
    }
};