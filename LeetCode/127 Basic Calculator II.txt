class Solution {
public:
    int priority(char s){
        if(s == '+' || s== '-'){
            return 1;
        } else{
            return 2;
        }
        
    }
    int retriveCalculate(char s,int a,int b){
        if(s == '+' ){
            return a+b;
        } else if(s == '*'){
            return a*b;
        }else  if(s == '-' ){
            return a-b;
        } else if(s == '/'){
            return a/b;
        }
        return 0;
    }
    int calculate(string s) {
        
        stack<int> number ;
        stack<char> chara;
        bool check = false;
       for(int i = 0; i< s.length(); i++){
           if(s[i] >= '0' && s[i] <= '9' && check){
                int a = number.top();
                number.pop();
                a= (a * 10) + (s[i]-'0');
                number.push(a);
                
            } else  if(s[i] >= '0' && s[i] <= '9'){
                 
                number.push(s[i]-'0');
                check = true;
            } else if (s[i] == '+' ||s[i] == '-' ||s[i] == '*' ||s[i] == '/' ){
               
                while(chara.size() > 0 && priority(s[i]) <= priority(chara.top())){
                     char c = chara.top();
                    chara.pop();
                    int b = number.top();
                    number.pop();
                    int a = number .top();
                    number.pop();
                    int res = retriveCalculate(c,a,b);
                   // cout <<"test : "<<res  <<endl;
                    number.push(res);
                   
                }
                    chara.push(s[i]);
                 check= false;
            }
       }
                   while(chara.size()> 0){
                       
                             char c = chara.top();
                    chara.pop();
                    int b = number.top();
                    number.pop();
                    int a = number .top();
                    number.pop();
                    int res = retriveCalculate(c,a,b);
                       
                    number.push(res);
                        
                   }
                   return number.top();
                   

                   
                   
                   
    }
};