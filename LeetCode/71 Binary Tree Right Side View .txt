/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper (TreeNode * root , map < int,int> & res,int level){
        if(root == NULL){
            return ;
            
        }
        if(res.find(level) == res.end()){
            res[level] = root->val;
        }
        
        helper(root-> right,res,level+1);
        
        helper(root-> left,res,level+1);
        
        
        
    }
    vector<int> rightSideView(TreeNode* root) {
        
        TreeNode * right = root;
        
         map<int,int>  res;
        helper(root,res,0);
        
        vector<int> ans;
        for(auto a: res){
            ans.push_back(a.second);
        }
        
       return  ans;
    }
};