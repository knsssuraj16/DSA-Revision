int widthOfBinaryTree(TreeNode* root) {
        
        queue<pair<int,TreeNode * >> q;
        q.push({0,root});
        int ans =0;
        while(q.size() > 0 ){
            
            int size = q.size();
            int first,last;
            int min = q.front ().first;
           first = q.front ().first-min;
            for(int i=0; i< size; i++){
                
                last =  q.front ().first-min;
                TreeNode* node = q.front().second;
                q.pop();
                
                if(node-> left != NULL){
                    q.push({(last) *2+1,node->left});
                } 
                if(node-> right  != NULL){
                    q.push({(last)*2+2,node->right});
                }
            }
            
            ans = max(last -(first) +1, ans);
        }
        
        return ans;
        
    }