/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode * reverse(ListNode* pre,ListNode* curr){
        while(curr!=NULL){
            ListNode* next= curr->next;
            curr->next = pre;
            pre = curr;
            curr =next;
        }
        return pre;
    }
    void reorderList(ListNode* head) {
        if(head==NULL || head->next == NULL){
            return ;
        }
        
        ListNode * val =  head;
        
        ListNode * fast = head;
        ListNode * slow = head;
        
        while(fast->next != NULL && fast->next->next != NULL){
            fast= fast->next->next;
            slow= slow->next;
        }
        
      ListNode* newLink = reverse(NULL,slow->next);
        slow->next = NULL;
        
        while(newLink !=NULL){
            ListNode *  temp = head->next;
            
            ListNode *  newtemp = newLink->next;
            
            head->next = newLink;
            
            head->next->next =temp;
            
            head= temp;
            newLink= newtemp;
        }
        
       
        
    }
};