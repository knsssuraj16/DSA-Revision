/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        vector<vector<int>> res;
        if(root== NULL){
            return res;
        }
        queue<TreeNode*> q;
        q.push(root);
        
        bool ltor= true;
        while(q.size() > 0){
            int size = q.size();
            
            vector<int> row(size);
            
            for(int i =0; i< size; i++){
                
                TreeNode * temp = q.front();
                q.pop();
                
                int index= ltor ? i : (size - i - 1);
                row[index] = temp->val;
                
                if(temp->left){
                    q.push(temp->left);
                }
                 
                if(temp->right){
                    q.push(temp->right);
                }
                
                
            }
            
            res.push_back(row);
            ltor= !ltor;
        }
        
        return res;
        
    }
};