class Solution {
public:
    int counter=0;
    
    void isReached(int i,int j,vector<vector<int>>& heights,vector<vector<int>>&vis){
        if(i<0 || j<0 || i >= heights.size() || j >= heights[0].size()){
            return ;
        }
        
        if(vis[i][j]){
            return ;
        }
        
        vis[i][j] = 1;
      
      
        if(i-1 >=0 && !vis[i-1][j] && heights[i-1][j] >= heights[i][j])
       isReached(i-1,j,heights,vis);
        
        
        if(i+1 < heights.size() && !vis[i+1][j] && heights[i+1][j]>= heights[i][j])
       isReached(i+1,j,heights,vis);
        
        
        if(j+1 < heights[0].size() && !vis[i][j+1] && heights[i][j+1]>= heights[i][j])
       isReached(i,j+1,heights,vis);
        
        
        if(j-1 >= 0 && !vis[i][j-1] && heights[i][j-1]>= heights[i][j])
       isReached(i,j-1,heights,vis);
        
       
            
       
        
      
        
    }
    
    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {
        int m = heights.size();
        int n = heights[0].size();
        vector<vector<int>> pas(m,vector<int> (n,0));
        vector<vector<int>> atl(m,vector<int> (n,0));
        
        for(int i =0; i< m; i++){
            
            //pasific
            isReached(i,0,heights,pas);
          
            
            //atlantic
            
            isReached(i,n-1,heights,atl);
           
            
        }
           
        for(int i =0; i< n; i++){
            
            //pasific
            // combine[0][i]++;
            
            isReached(0,i,heights,pas);
            
         
            
            isReached(m-1,i,heights,atl);
            
        }

        
       vector<vector<int>> res;
        
          for(int i =0 ; i< m; i++){
            for(int j =0 ; j< n; j++){
                
                // cout<<pas[i][j] << atl[i][j]<< " ";
                if(pas[i][j] && atl[i][j]){
                    vector<int> loc={i,j};
                    res.push_back(loc);
                }
            }
              // cout<<endl;
        }
        
        return res;
        
        
    }
};