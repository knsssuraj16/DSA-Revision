class Solution {
public:
    bool checkConditon(vector<int>& nums,int mid){
        if(mid % 2== 0 && nums[mid] == nums[mid+1]){
            return true;
        }  else if(mid % 2 != 0 && nums[mid] == nums[mid-1]){
            return true;
        }
        return false;
    }
    int singleNonDuplicate(vector<int>& nums) {
        // [1,1,2,3,3,4,4,8,8] size of arr is 9;
        //  0,1,2,3,4,5,6,7,8
        if(nums.size() ==1){
            return nums[0];
        }
        
        int l= 0, r=nums.size()-1;
        
        while(l <= r){
            int mid = (l+r) >> 1;
            if(!checkConditon(nums,mid)){
                r= mid-1;
            }else{
                l = mid+1;
            }
        }
        return nums[l];
        
        
    }
};