#include<bits/stdc++.h>
using namespace std;

 int solve(vector<int> &arr,int idx,bool processing,int k, vector<vector<vector<int>>> &dp){
     
     if(idx == arr.size() || k==0){
         return 0;
     }
     
     if(dp[idx][k][processing] != -1){
         return dp[idx][k][processing];
     }
     
     int notInclude =  solve(arr, idx+1, processing, k,dp);
	
     int include = 0;
     
     if(processing){
         //selling item
          include = arr[idx] + solve(arr, idx+1, false, k-1,dp) ;
         
         dp[idx][k][processing] = max(notInclude,include);
    	  return max(notInclude,include);
         
     }else{
         //buying item
         if (k>0)
         include = solve(arr, idx+1, true, k,dp) - arr[idx];
     }
     
     
         dp[idx][k][processing] = max(notInclude,include);
     return max(notInclude,include);
} 

int main(){
    
    // write your code here
    
    int t ;
    cin >> t;
    
    while(t--){
        int n ,k;
        cin >> k;
        cin >> n ;
        vector<int> arr(n);
        for(int i =0; i<n ; i++){
            cin>> arr[i];
            
        }
        vector<vector<vector<int>>> dp(n+1,vector<vector<int>>(k+1,vector<int>(2,-1)));
                                       
        cout << solve(arr,0,false,k,dp)<<endl;
        
        
    }
    return 0;
}